#!/bin/bash
#    Begin PBS directives
#PBS -A csc326
#PBS -N instpkg_python01
#PBS -l walltime=2:00:00,nodes=1
#PBS -l gres=atlas1%atlas2

date

source $MODULESHOME/init/bash

module swap craype-interlagos craype-mc8
module swap cray-mpich/7.6.3  craype-network-none
module swap craype-network-gemini craype-network-none
module load craype-network-none

module load git/2.9.3
module swap PrgEnv-pgi PrgEnv-gnu
module load PrgEnv-gnu
module swap gcc/6.3.0 gcc/7.2.0
module load gcc/7.2.0

# make sure to load native compiler from /opt/gcc/7.2.0/bin in ~/.spack/cray/compilers.yaml
# enable compiling for login/service nodes instead of the compute nodes
module swap craype-interlagos craype-mc8
module load craype-mc8
module swap craype-network-gemini craype-network-none
module load craype-network-none

# CMake 3.6.0 module has different variables set in module specification (module show cmake3/3.6.0) See https://github.com/spack/spack/issues/7629
# Is loading packages with modules good at all? Must have something in the path
module unload cmake3/3.6.0
module unload cmake3
module unload cmake

# try to save CMake's prefix path variable, if there is one
if test -z $CMAKE_PREFIX_PATH ;
then
not_set=1
else
not_set=0
export ORIG=${CMAKE_PREFIX_PATH}
fi

# Phist (?) requires CMake 3.8.0
module load cmake3/3.9.0

# reconstruct CMake's prefix path variable, if there was one
if test $not_set = 1 ;
then
unset CMAKE_PREFIX_PATH
else
export CMAKE_PREFIX_PATH=${ORIG}
fi

# conflicts with network-none above
# module load cray-mpich/7.6.3
# Not needed
# module load cray-hdf5-parallel

# Mercurial needs Python, so remove it to prevent default Cray Python from being loaded
#module unload mercurial/2.6.3

date

cd $PROJWORK/csc326/luszczek
cd spack
git checkout develop

date

# clean up the local scratch/temp. file systems that might be polluted by failed builds
if test -d /tmp/scratch/luszczek/spack-stage ;
then
rm -rf /tmp/scratch/luszczek/spack-stage/*
fi

if test -d /tmp/luszczek/spack-stage ;
then
rm -rf /tmp/luszczek/spack-stage/*
fi

date

export SPACKROOT=$PROJWORK/csc326/luszczek/spack
SPACKEXE=$SPACKROOT/bin/spack

# clean Spack's temporary build stages
$SPACKEXE clean -s

date

# Lustre file systems or Titan are mounted with "flock" support so locks may be enable but I only run one Spack at a time so flock() is not necessary
# --disable-locks
$SPACKEXE install --show-log-on-error --install-status python@2.7.15^perl@5.16.3%gcc@7.2.0 arch=cray-cnl5-interlagos

date


if test -d /tmp/scratch/luszczek/spack-stage ;
then
du -sh /tmp/scratch/luszczek/spack-stage/*
tar czf $PROJWORK/csc326/luszczek/spack/var/scratch${PBS_JOBID}.tar.gz /tmp/scratch/luszczek/spack-stage
rm -rf /tmp/scratch/luszczek/spack-stage/*
fi

if test -d /tmp/luszczek/spack-stage ;
then
du -sh /tmp/luszczek/spack-stage/*
tar czf $PROJWORK/csc326/luszczek/spack/var/tmp${PBS_JOBID}.tar.gz /tmp/luszczek/spack-stage
rm -rf /tmp/luszczek/spack-stage/*
fi

date

# clean Spack's temporary build stages
$SPACKEXE clean -s

date
